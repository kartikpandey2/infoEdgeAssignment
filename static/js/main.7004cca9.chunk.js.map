{"version":3,"sources":["components/taskTray/index.js","components/taskCard/index.js","utils/index.js","utils/task.js","pages/home/index.js","components/button/index.js","components/newTask/index.js","pages/addTask/index.js","pages/updateTask/index.js","pages/viewTask/index.js","App.js","index.js","components/newTask/newTask.module.scss","pages/home/home.module.scss","components/taskCard/taskCard.module.scss","pages/addTask/addTask.module.scss","components/taskTray/taskTray.module.scss","components/button/button.module.scss"],"names":["TaskTray","props","deleteAll","updateMany","menu","Item","onClick","Divider","className","styles","taskTrayContainer","headingContainer","heading","name","showOptions","to","overlay","placement","arrow","trigger","content","children","dueTaskColor","normalTaskColor","TaskCard","priorityColor","task","onDelete","updateTaskStatus","status","id","priority","daysToTaskDue","time","Math","floor","timeToDayCount","dueDate","Date","now","taskCardContainer","dueTaskHighliterContainer","slice","map","color","index","key","style","background","dueTaskHighliter","titleContainer","taskTitle","description","toUpperCase","addTask","taskData","createdOn","taskList","getTask","push","localStorage","setItem","JSON","stringify","getItem","parse","getTaskById","taskId","parseInt","filter","updateTask","updatedData","newTaskList","allTaskTray","taskListName","priorityOrder","high","medium","low","Home","useState","updateTaskList","autoCompleteOptions","updateAutoCompleteOptions","handleDeleteTask","deleteTask","tasks","taskMap","i","length","updatedTaskList","deleteManyTask","updateManyTaskStatus","updateManyTask","taskObj","todoTask","completedTask","dueTask","setHours","sort","a","b","homeContainer","searchContainer","onSearch","value","filterAutoCompleteOptions","includes","options","taskStatus","tagColor","label","itemsContainer","itemRow","itemName","itemDescription","renderItem","width","placeholder","autoComplete","trayContainer","taskTray","updatedTask","Button","type","rest","buttonClass","toLowerCase","primary","primaryBorder","classNames","button","Option","Select","TextArea","Input","showNotification","message","notification","success","NewTask","state","validateTaskData","obj","err","isValidData","onAdd","console","log","onUpdate","disabledDate","current","todayDate","valueOf","this","update","readOnly","setState","newTaskContainer","inputContainer","onChange","e","target","rows","disabled","_date","dateString","moment","Component","AddTask","redirect","toggleRedirect","addNewTaskContainer","UpdateTask","match","params","ViewTask","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7004cca9.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Menu, Dropdown } from \"antd\";\nimport styles from \"./taskTray.module.scss\";\n\nconst TaskTray = (props) => {\n  const { deleteAll, updateMany } = props;\n\n  const menu = (\n    <Menu>\n      <Menu.Item>\n        <div onClick={() => updateMany(\"COMPLETED\")}>Mark All Complete</div>\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item>\n        <div onClick={deleteAll}>Delete All</div>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <div className={styles.taskTrayContainer}>\n      <div className={styles.headingContainer}>\n        <div className={styles.heading}>{props.name}</div>\n        {props.showOptions ? (\n          <div>\n            <Link to=\"/infoEdgeAssignment/add\">\n              <button className=\"iconButton\">\n                <span className=\"addIcon\">+</span>\n              </button>\n            </Link>\n            <Dropdown\n              overlay={menu}\n              placement=\"bottomRight\"\n              arrow\n              trigger={[\"click\"]}\n            >\n              <button className=\"iconButton\">\n                <span className=\"optionsIcon\">...</span>\n              </button>\n            </Dropdown>\n          </div>\n        ) : null}\n      </div>\n      <div className={styles.content}>{props.children}</div>\n    </div>\n  );\n};\n\nexport default TaskTray;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Menu, Dropdown, Tag } from \"antd\";\nimport { timeToDayCount } from \"../../utils\";\nimport styles from \"./taskCard.module.scss\";\n\nconst dueTaskColor = [\"#a80101\", \"#cc4e42\", \"#e9847e\"];\nconst normalTaskColor = [\"#87d068\", \"#87d068\", \"#87d068\", \"#87d068\"];\n\nconst TaskCard = (props) => {\n  const { task, onDelete, updateTaskStatus } = props;\n\n  const menu =\n    task.status === \"OPEN\" ? (\n      <Menu>\n        <Menu.Item>\n          <Link to={`/infoEdgeAssignment/update/${task.id}`}>Edit</Link>\n        </Menu.Item>\n        <Menu.Divider />\n        <Menu.Item>\n          <div onClick={() => updateTaskStatus(\"COMPLETED\")}>Mark Complete</div>\n        </Menu.Item>\n        <Menu.Divider />\n        <Menu.Item>\n          <div onClick={onDelete}>Delete</div>\n        </Menu.Item>\n      </Menu>\n    ) : (\n      <Menu>\n        <Menu.Item>\n          <div onClick={() => updateTaskStatus(\"OPEN\")}>Mark Open</div>\n        </Menu.Item>\n        <Menu.Item>\n          <div onClick={onDelete}>Delete</div>\n        </Menu.Item>\n      </Menu>\n    );\n\n  let priorityColor;\n\n  switch (task.priority) {\n    case \"low\": {\n      priorityColor = \"cyan\";\n      break;\n    }\n\n    case \"medium\": {\n      priorityColor = \"orange\";\n      break;\n    }\n\n    case \"high\": {\n      priorityColor = \"volcano\";\n      break;\n    }\n\n    default: {\n      break;\n    }\n  }\n\n  const daysToTaskDue = timeToDayCount(task.dueDate - Date.now());\n\n  return (\n    <div className={styles.taskCardContainer}>\n      {task.status === \"OPEN\" ? (\n        <div className={styles.dueTaskHighliterContainer}>\n          {daysToTaskDue < 3 ? (\n            <div>\n              {dueTaskColor.slice(0, daysToTaskDue + 1).map((color, index) => (\n                <span\n                  key={index}\n                  style={{ background: color }}\n                  className={styles.dueTaskHighliter}\n                />\n              ))}\n            </div>\n          ) : (\n            <div>\n              {normalTaskColor.map((color, index) => (\n                <span\n                  key={index}\n                  style={{ background: color }}\n                  className={styles.dueTaskHighliter}\n                />\n              ))}\n            </div>\n          )}\n          <Dropdown\n            overlay={menu}\n            placement=\"bottomRight\"\n            arrow\n            trigger={[\"click\"]}\n          >\n            <button className=\"iconButton\">\n              <span className=\"optionsIcon\">...</span>\n            </button>\n          </Dropdown>\n        </div>\n      ) : null}\n      <div className={styles.titleContainer}>\n        <div className={styles.taskTitle}>\n          <Link to={`/infoEdgeAssignment/${task.id}`}>{task.name} </Link>\n        </div>\n\n        {task.status === \"COMPLETED\" ? (\n          <Dropdown\n            overlay={menu}\n            placement=\"bottomRight\"\n            arrow\n            trigger={[\"click\"]}\n          >\n            <button className=\"iconButton\">\n              <span className=\"optionsIcon\">...</span>\n            </button>\n          </Dropdown>\n        ) : null}\n      </div>\n      <p className={styles.description}>\n        {task.description ? task.description : \"No description provided.\"}\n      </p>\n      <Tag color={priorityColor}>{task.priority.toUpperCase()}</Tag>\n    </div>\n  );\n};\n\nexport default TaskCard;\n","export const timeToDayCount = (time) => {\n  if (time < 0) {\n    return 0;\n  }\n\n  const millisInDay = 24 * 60 * 60 * 1000;\n\n  return Math.floor(time / millisInDay);\n};\n","export const addTask = (task) => {\n  const taskData = {\n    ...task,\n    createdOn: Date.now(),\n    id: Date.now(),\n    status: \"OPEN\",\n  };\n  const taskList = getTask();\n\n  taskList.push(taskData);\n  localStorage.setItem(\"tasks\", JSON.stringify(taskList));\n};\n\nexport const getTask = () => {\n  let taskList = localStorage.getItem(\"tasks\");\n\n  if (taskList) {\n    taskList = JSON.parse(taskList);\n  } else {\n    taskList = [];\n  }\n\n  return taskList;\n};\n\nexport const getTaskById = (taskId) => {\n  taskId = parseInt(taskId);\n  const taskList = getTask();\n\n  const t = taskList.filter((task) => task.id === taskId)[0];\n  return t;\n};\n\nexport const deleteTask = (taskId) => {\n  const taskList = getTask();\n  const newTaskList = taskList.filter((task) => task.id !== taskId);\n\n  localStorage.setItem(\"tasks\", JSON.stringify(newTaskList));\n};\n\nexport const deleteManyTask = (tasks) => {\n  const taskMap = {};\n\n  for (let i = 0; i < tasks.length; ++i) {\n    const task = tasks[i];\n    taskMap[task.id] = task;\n  }\n\n  const taskList = getTask();\n\n  const updatedTaskList = taskList.filter((task) => {\n    return !taskMap[task.id];\n  });\n\n  localStorage.setItem(\"tasks\", JSON.stringify(updatedTaskList));\n};\n\nexport const updateTask = (taskId, updatedData) => {\n  const taskList = getTask();\n  const newTaskList = taskList.map((task) => {\n    if (task.id === taskId) {\n      return updatedData;\n    }\n\n    return task;\n  });\n\n  localStorage.setItem(\"tasks\", JSON.stringify(newTaskList));\n};\n\nexport const updateManyTask = (updateTaskList) => {\n  const taskMap = {};\n\n  for (let i = 0; i < updateTaskList.length; ++i) {\n    const task = updateTaskList[i];\n    taskMap[task.id] = task;\n  }\n\n  const taskList = getTask();\n\n  const updatedTaskList = taskList.map((task) => {\n    if (taskMap[task.id]) {\n      return taskMap[task.id];\n    }\n\n    return task;\n  });\n\n  localStorage.setItem(\"tasks\", JSON.stringify(updatedTaskList));\n};\n","import React, { useState } from \"react\";\nimport { AutoComplete, Tag } from \"antd\";\nimport TaskTray from \"../../components/taskTray\";\nimport TaskCard from \"../../components/taskCard\";\nimport {\n  getTask,\n  deleteTask,\n  updateTask,\n  deleteManyTask,\n  updateManyTask,\n} from \"../../utils/task\";\nimport styles from \"./home.module.scss\";\n\nconst allTaskTray = [\n  {\n    name: \"Todo\",\n    taskListName: \"todoTask\",\n    showOptions: true,\n  },\n  {\n    name: \"Completed\",\n    taskListName: \"completedTask\",\n    showOptions: false,\n  },\n  {\n    name: \"Due\",\n    taskListName: \"dueTask\",\n    showOptions: false,\n  },\n];\n\nconst priorityOrder = {\n  high: 1,\n  medium: 2,\n  low: 3,\n};\n\nconst renderItem = (task) => {\n  let taskStatus = task.status;\n  let tagColor = \"blue\";\n\n  if (task.status === \"OPEN\" && Date.now() > task.dueDate) {\n    taskStatus = \"DUE\";\n    tagColor = \"red\";\n  }\n\n  if (task.status === \"COMPLETED\") {\n    tagColor = \"green\";\n  }\n\n  return {\n    value: task.name,\n    label: (\n      <div className={styles.itemsContainer}>\n        <div className={styles.itemRow}>\n          <div className={styles.itemName}>{task.name}</div>\n          <Tag color={tagColor}>{taskStatus}</Tag>\n        </div>\n        <div className={styles.itemDescription}>{task.description}</div>\n      </div>\n    ),\n  };\n};\n\nconst Home = () => {\n  const [taskList, updateTaskList] = useState(getTask());\n  const [autoCompleteOptions, updateAutoCompleteOptions] = useState(getTask());\n\n  const handleDeleteTask = (taskId) => {\n    deleteTask(taskId);\n    updateTaskList(getTask());\n  };\n\n  const updateTaskStatus = (task, status) => {\n    const updatedTask = { ...task, status };\n\n    updateTask(task.id, updatedTask);\n    const tasks = getTask();\n    updateTaskList(tasks);\n    updateAutoCompleteOptions(tasks);\n  };\n\n  const onSearch = (value) => {\n    if (!value) {\n      return updateAutoCompleteOptions(getTask());\n    }\n\n    const filterAutoCompleteOptions = autoCompleteOptions.filter((task) =>\n      task.name.includes(value)\n    );\n\n    updateAutoCompleteOptions(filterAutoCompleteOptions);\n  };\n\n  const deleteAll = (tasks) => {\n    deleteManyTask(tasks);\n    updateTaskList(getTask());\n  };\n\n  const updateManyTaskStatus = (tasks, status) => {\n    const updatedTaskList = tasks.map((task) => ({ ...task, status }));\n    updateManyTask(updatedTaskList);\n    updateTaskList(getTask());\n  };\n\n  const taskObj = {\n    todoTask: [],\n    completedTask: [],\n    dueTask: [],\n  };\n\n  for (let i = 0; i < taskList.length; ++i) {\n    const task = taskList[i];\n\n    if (task.status === \"COMPLETED\") {\n      taskObj.completedTask.push(task);\n    } else if (\n      task.status === \"OPEN\" &&\n      new Date().setHours(0, 0, 0, 0) > task.dueDate\n    ) {\n      taskObj.dueTask.push(task);\n    } else {\n      taskObj.todoTask.push(task);\n    }\n  }\n\n  taskObj.todoTask.sort(\n    (a, b) => priorityOrder[a.priority] - priorityOrder[b.priority]\n  );\n  taskObj.completedTask.sort(\n    (a, b) => priorityOrder[a.priority] - priorityOrder[b.priority]\n  );\n  taskObj.dueTask.sort(\n    (a, b) => priorityOrder[a.priority] - priorityOrder[b.priority]\n  );\n\n  return (\n    <div className={styles.homeContainer}>\n      <div className={styles.searchContainer}>\n        <AutoComplete\n          onSearch={onSearch}\n          options={autoCompleteOptions.map((task) => renderItem(task))}\n          style={{\n            width: \"100%\",\n          }}\n          placeholder=\"Search Task\"\n          className={styles.autoComplete}\n        />\n      </div>\n      <div className={styles.trayContainer}>\n        {allTaskTray.map((taskTray, index) => {\n          const tasks = taskObj[taskTray.taskListName];\n\n          return (\n            <TaskTray\n              name={taskTray.name}\n              showOptions={taskTray.showOptions}\n              key={index}\n              deleteAll={() => deleteAll(tasks)}\n              updateMany={(status) => updateManyTaskStatus(tasks, status)}\n            >\n              {tasks.map((task) => (\n                <TaskCard\n                  key={task.id}\n                  task={task}\n                  onDelete={() => handleDeleteTask(task.id)}\n                  updateTaskStatus={(status) => updateTaskStatus(task, status)}\n                />\n              ))}\n            </TaskTray>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./button.module.scss\";\n\nconst Button = (props) => {\n  const { type = \"\", className = \"\", ...rest } = props;\n  let buttonClass = \"\";\n\n  switch (type.toLowerCase()) {\n    case \"primary\": {\n      buttonClass = styles.primary;\n      break;\n    }\n\n    case \"primary-border\": {\n      buttonClass = styles.primaryBorder;\n      break;\n    }\n\n    default: {\n      break;\n    }\n  }\n\n  return (\n    <button\n      className={classNames(buttonClass, className, styles.button)}\n      {...rest}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { notification, Select, DatePicker, Input } from \"antd\";\nimport Button from \"../button\";\nimport { addTask, updateTask } from \"../../utils/task\";\nimport styles from \"./newTask.module.scss\";\n\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nconst showNotification = (message) => {\n  notification.success({\n    message,\n  });\n};\n\nclass NewTask extends Component {\n  state = {\n    name: \"\",\n    description: \"\",\n    priority: \"low\",\n    dueDate: Date.now(),\n  };\n\n  componentDidMount() {\n    const { update, task, readOnly } = this.props;\n\n    if (update || readOnly) {\n      this.setState({\n        name: task.name,\n        description: task.description,\n        priority: task.priority,\n        dueDate: task.dueDate,\n      });\n    }\n  }\n\n  validateTaskData = () => {\n    const { name, dueDate } = this.state;\n    const obj = { value: true, err: null };\n\n    if (!name) {\n      obj.value = false;\n      obj.err = \"Name field cannot be empty\";\n\n      return obj;\n    }\n\n    if (!dueDate) {\n      obj.value = false;\n      obj.err = \"Due field cannot be empty\";\n\n      return obj;\n    }\n\n    return obj;\n  };\n\n  addTask = () => {\n    const { name, description, priority, dueDate } = this.state;\n    const isValidData = this.validateTaskData();\n\n    if (isValidData.value) {\n      const taskData = {\n        name,\n        description,\n        priority,\n        dueDate,\n      };\n\n      addTask(taskData);\n      showNotification(\"Task Added\");\n      this.props.onAdd();\n    } else {\n      console.log(isValidData.err);\n    }\n  };\n\n  updateTask = () => {\n    const { name, description, priority, dueDate } = this.state;\n    const isValidData = this.validateTaskData();\n\n    if (isValidData.value) {\n      const taskData = {\n        ...this.props.task,\n        name,\n        description,\n        priority,\n        dueDate,\n      };\n\n      updateTask(this.props.task.id, taskData);\n      showNotification(\"Task Updated\");\n      this.props.onUpdate();\n    } else {\n      console.log(isValidData.err);\n    }\n  };\n\n  disabledDate = (current) => {\n    const todayDate = new Date().setHours(0, 0, 0, 0);\n\n    if (current.valueOf() < todayDate) {\n      return true;\n    }\n\n    return false;\n  };\n\n  render() {\n    const { name, description, priority, dueDate } = this.state;\n    const { readOnly, update } = this.props;\n\n    return (\n      <div className={styles.newTaskContainer}>\n        <div className={styles.inputContainer}>\n          <label className={styles.label}>Name</label>\n          <Input\n            onChange={(e) => this.setState({ name: e.target.value })}\n            value={name}\n            readOnly={readOnly}\n          />\n        </div>\n        <div className={styles.inputContainer}>\n          <label className={styles.label}>Description</label>\n          <TextArea\n            rows={4}\n            onChange={(e) => this.setState({ description: e.target.value })}\n            value={description}\n            readOnly={readOnly}\n          />\n        </div>\n        <div className={styles.inputContainer}>\n          <label className={styles.label}>Priority</label>\n          <Select\n            onChange={(value) => this.setState({ priority: value })}\n            value={priority}\n            style={{ width: 120 }}\n            disabled={readOnly}\n          >\n            <Option value=\"low\">Low</Option>\n            <Option value=\"medium\">Medium</Option>\n            <Option value=\"high\">High</Option>\n          </Select>\n        </div>\n        <div className={styles.inputContainer}>\n          <label className={styles.label}>Due Date</label>\n          <DatePicker\n            type=\"date\"\n            onChange={(_date, dateString) =>\n              this.setState({ dueDate: moment(dateString).valueOf() })\n            }\n            value={moment(dueDate)}\n            disabledDate={this.disabledDate}\n            disabled={readOnly}\n          />\n        </div>\n        {!readOnly ? (\n          <div className={styles.inputContainer}>\n            {update ? (\n              <Button type=\"primary\" onClick={this.updateTask}>\n                Update Task\n              </Button>\n            ) : (\n              <Button type=\"primary\" onClick={this.addTask}>\n                Create Task\n              </Button>\n            )}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default NewTask;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport NewTask from \"../../components/newTask\";\nimport styles from \"./addTask.module.scss\";\n\nconst AddTask = () => {\n  const [redirect, toggleRedirect] = useState(false);\n\n  if (redirect) {\n    return <Redirect to=\"/infoEdgeAssignment\" />;\n  }\n\n  return (\n    <div className={styles.addNewTaskContainer}>\n      <h1>Create New Task</h1>\n      <NewTask onAdd={() => toggleRedirect(true)} />\n    </div>\n  );\n};\n\nexport default AddTask;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport NewTask from \"../../components/newTask\";\nimport { getTaskById } from \"../../utils/task\";\nimport styles from \"../addTask/addTask.module.scss\";\n\nconst UpdateTask = (props) => {\n  const taskId = props.match.params.taskId;\n  const task = getTaskById(taskId);\n\n  const [redirect, toggleRedirect] = useState(false);\n\n  if (redirect) {\n    return <Redirect to=\"/infoEdgeAssignment\" />;\n  }\n\n  return (\n    <div className={styles.addNewTaskContainer}>\n      <h1>Update Task</h1>\n      <NewTask\n        update={true}\n        task={task}\n        onUpdate={() => toggleRedirect(true)}\n      />\n    </div>\n  );\n};\n\nexport default UpdateTask;\n","import React from \"react\";\nimport NewTask from \"../../components/newTask\";\nimport { getTaskById } from \"../../utils/task\";\nimport styles from \"../addTask/addTask.module.scss\";\n\nconst ViewTask = (props) => {\n  const taskId = props.match.params.taskId;\n  const task = getTaskById(taskId);\n\n  return (\n    <div className={styles.addNewTaskContainer}>\n      <h1>View Task</h1>\n      <NewTask readOnly={true} task={task} />\n    </div>\n  );\n};\n\nexport default ViewTask;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/home\";\nimport AddTask from \"./pages/addTask\";\nimport UpdateTask from \"./pages/updateTask\";\nimport ViewTask from \"./pages/viewTask\";\nimport \"./app.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/infoEdgeAssignment/\" component={Home} />\n        <Route exact path=\"/infoEdgeAssignment/add\" component={AddTask} />\n        <Route exact path=\"/infoEdgeAssignment/:taskId\" component={ViewTask} />\n        <Route\n          path=\"/infoEdgeAssignment/update/:taskId\"\n          component={UpdateTask}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newTaskContainer\":\"newTask_newTaskContainer__18_1m\",\"inputContainer\":\"newTask_inputContainer__1x3Hk\",\"label\":\"newTask_label__3LSN8\",\"input\":\"newTask_input__2YYSi\",\"textarea\":\"newTask_textarea__zjug_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homeContainer\":\"home_homeContainer__NK-A3\",\"searchContainer\":\"home_searchContainer__1wzA9\",\"trayContainer\":\"home_trayContainer__2kip_\",\"itemsContainer\":\"home_itemsContainer__23HoU\",\"itemRow\":\"home_itemRow__23peR\",\"itemName\":\"home_itemName__3g8fQ\",\"itemDescription\":\"home_itemDescription__1ZRKo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskCardContainer\":\"taskCard_taskCardContainer__2l7dp\",\"dueTaskHighliterContainer\":\"taskCard_dueTaskHighliterContainer__2Av8O\",\"dueTaskHighliter\":\"taskCard_dueTaskHighliter__3b9a8\",\"titleContainer\":\"taskCard_titleContainer__3aTMW\",\"taskTitle\":\"taskCard_taskTitle__3gGQh\",\"description\":\"taskCard_description__mhDa-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addNewTaskContainer\":\"addTask_addNewTaskContainer__3gW6H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskTrayContainer\":\"taskTray_taskTrayContainer__3fDBY\",\"headingContainer\":\"taskTray_headingContainer__2EgKW\",\"heading\":\"taskTray_heading__2kDFp\",\"content\":\"taskTray_content__2GIF0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__H5057\",\"primary\":\"button_primary__3C1qu\"};"],"sourceRoot":""}